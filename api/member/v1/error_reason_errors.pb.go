// Code generated by protoc-gen-go-errors. DO NOT EDIT.

package v1

import (
	fmt "fmt"
	errors "github.com/go-kratos/kratos/v2/errors"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the kratos package it is being compiled against.
const _ = errors.SupportPackageIsVersion1

func IsMemberNotFound(err error) bool {
	if err == nil {
		return false
	}
	e := errors.FromError(err)
	return e.Reason == ErrorReason_MEMBER_NOT_FOUND.String() && e.Code == 404
}

func ErrorMemberNotFound(format string, args ...interface{}) *errors.Error {
	return errors.New(404, ErrorReason_MEMBER_NOT_FOUND.String(), fmt.Sprintf(format, args...))
}

func IsContentMissing(err error) bool {
	if err == nil {
		return false
	}
	e := errors.FromError(err)
	return e.Reason == ErrorReason_CONTENT_MISSING.String() && e.Code == 400
}

func ErrorContentMissing(format string, args ...interface{}) *errors.Error {
	return errors.New(400, ErrorReason_CONTENT_MISSING.String(), fmt.Sprintf(format, args...))
}

func IsParamsError(err error) bool {
	if err == nil {
		return false
	}
	e := errors.FromError(err)
	return e.Reason == ErrorReason_PARAMS_ERROR.String() && e.Code == 403
}

func ErrorParamsError(format string, args ...interface{}) *errors.Error {
	return errors.New(403, ErrorReason_PARAMS_ERROR.String(), fmt.Sprintf(format, args...))
}

func IsDbActionError(err error) bool {
	if err == nil {
		return false
	}
	e := errors.FromError(err)
	return e.Reason == ErrorReason_DB_ACTION_ERROR.String() && e.Code == 502
}

func ErrorDbActionError(format string, args ...interface{}) *errors.Error {
	return errors.New(502, ErrorReason_DB_ACTION_ERROR.String(), fmt.Sprintf(format, args...))
}
